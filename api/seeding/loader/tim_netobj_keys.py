import psycopg2 as psql

NETOBJ_IDs = {
    u'Connectors': [(u'ZONENO', 'INTEGER'),
                    (u'NODENO', 'INTEGER'),
                    (u'DIRECTION', 'TEXT')],
    u'CountLocations': [(u'NO', 'INTEGER')],
    # u'Crosswalks': [(u'NODENO', 'INTEGER'),
                    # (u'MAINNODENO', 'INTEGER'),
                    # (u'ORIENTATION', 'TEXT'),
                    # (u'INDEX', 'INTEGER'),
                    # (u'DIRECTION', 'INTEGER')],
    # u'DemandSegments': [(u'CODE', 'TEXT')],
    # u'Detectors': [(u'NO', 'INTEGER')],
    # u'Directions': [(u'NO', 'INTEGER')],
    # u'GeometryTemplates': [(u'NO', 'INTEGER')],
    # u'LegTemplates': [(u'NO', 'INTEGER')],
    u'LineRouteItems': [(u'LINENAME', 'TEXT'),
                        (u'LINEROUTENAME', 'TEXT'),
                        (u'DIRECTIONCODE', 'TEXT'),
                        (u'INDEX', 'INTEGER')],
    u'LineRoutes': [(u'LINENAME', 'TEXT'),
                    (u'NAME', 'TEXT'),
                    (u'DIRECTIONCODE', 'TEXT')],
    u'Lines': [(u'NAME', 'TEXT')],
    u'LinkTypes': [(u'NO', 'INTEGER')],
    u'Links': [(u'NO', 'INTEGER'),
               (u'FROMNODENO', 'INTEGER'),
               (u'TONODENO', 'INTEGER')],
    # u'MainLines': [(u'NAME', 'TEXT')],
    # u'MainNodes': [(u'NO', 'INTEGER')],
    # u'MainTurns': [(u'FROMNODENO', 'INTEGER'),
                   # (u'FROMCORDONNODENO', 'INTEGER'),
                   # (u'TOCORDONNODENO', 'INTEGER'),
                   # (u'TONODENO', 'INTEGER')],
    # u'MainZones': [(u'NO', 'INTEGER')],
    # u'Modes': [(u'CODE', 'TEXT')],
    u'Nodes': [(u'NO', 'INTEGER')],
    # u'Operators': [(u'NO', 'INTEGER')],
    # u'PathSets': [(u'NO', 'INTEGER')],
    # u'Paths': [(u'SETNO', 'INTEGER'), (u'NO', 'INTEGER')],
    u'Screenlines': [(u'NO', 'INTEGER')],
    # u'SignalControls': [(u'NO', 'INTEGER')],
    # u'SignalGroups': [(u'SCNO', 'INTEGER'), (u'NO', 'INTEGER')],
    # u'Stages': [(u'SCNO', 'INTEGER'), (u'NO', 'INTEGER')],
    u'StopAreas': [(u'NO', 'INTEGER')],
    u'StopPoints': [(u'NO', 'INTEGER')],
    u'Stops': [(u'NO', 'INTEGER')],
    # u'TSystems': [(u'CODE', 'TEXT')],
    u'Territories': [(u'NO', 'INTEGER')],
    # u'TicketTypes': [(u'NO', 'INTEGER')],
    u'TimeProfileItems': [(u'LINENAME', 'TEXT'),
                          (u'LINEROUTENAME', 'TEXT'),
                          (u'DIRECTIONCODE', 'TEXT'),
                          (u'TIMEPROFILENAME', 'TEXT'),
                          (u'INDEX', 'INTEGER')],
    u'TimeProfiles': [(u'LINENAME', 'TEXT'),
                      (u'LINEROUTENAME', 'TEXT'),
                      (u'DIRECTIONCODE', 'TEXT'),
                      (u'NAME', 'TEXT')],
    # u'TollSystems': [(u'NO', 'INTEGER')],
    # u'Turns': [(u'FROMNODENO', 'INTEGER'),
               # (u'VIANODENO', 'INTEGER'),
               # (u'TONODENO', 'INTEGER')],
    # u'ValidDaysCont': [(u'NO', 'INTEGER')],
    # u'VehJourneySections': [(u'VEHJOURNEYNO', 'INTEGER'), (u'NO', 'INTEGER')],
    u'VehicleCombinations': [(u'NO', 'INTEGER')],
    u'VehicleJourneyItems': [(u'VEHJOURNEYNO', 'INTEGER'), (u'INDEX', 'INTEGER')],
    u'VehicleJourneys': [(u'NO', 'INTEGER')],
    # u'VehicleUnits': [(u'NO', 'INTEGER')],
    u'Zones': [(u'NO', 'INTEGER')]
}

con = psql.connect(host="localhost", user="postgres", password="sergt", dbname = "dvrpc-tim-viewer")
cur = con.cursor()
cur.execute("CREATE TABLE IF NOT EXISTS tim_netobj_keys (netobj TEXT, field TEXT, dtype TEXT);")
for netobj, keyfields in NETOBJ_IDs.iteritems():
    for field, dtype in keyfields:
        cur.execute("INSERT INTO tim_netobj_keys VALUES (%s, %s, %s);", [netobj.lower(), field.lower(), dtype.lower()])
con.commit()
